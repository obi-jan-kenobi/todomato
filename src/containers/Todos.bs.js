// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var React = require("react");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

function incSecond(sec) {
  return /* Second */[sec[0] + 1 | 0];
}

function tickTodo(todo) {
  return /* record */[
          /* todoId */todo[/* todoId */0],
          /* description */todo[/* description */1],
          /* status */todo[/* status */2],
          /* cycles */todo[/* cycles */3],
          /* duration */incSecond(todo[/* duration */4])
        ];
}

var component = ReasonReact.reducerComponent("Todos");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", undefined, "Hello from ReasonML");
            }),
          /* initialState */(function () {
              return /* record */[/* todos : [] */0];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              switch (action.tag | 0) {
                case 0 : 
                    return /* Update */Block.__(0, [/* record */[/* todos : :: */[
                                  action[0],
                                  state[/* todos */0]
                                ]]]);
                case 1 : 
                    var todoId = action[0];
                    return /* Update */Block.__(0, [/* record */[/* todos */List.filter((function (t) {
                                          return Caml_obj.caml_notequal(t[/* todoId */0], todoId);
                                        }))(state[/* todos */0])]]);
                case 2 : 
                    var todoId$1 = action[0];
                    return /* Update */Block.__(0, [/* record */[/* todos */List.map((function (t) {
                                        if (Caml_obj.caml_equal(t[/* todoId */0], todoId$1)) {
                                          return /* record */[
                                                  /* todoId */t[/* todoId */0],
                                                  /* description */t[/* description */1],
                                                  /* status : Running */1,
                                                  /* cycles */t[/* cycles */3],
                                                  /* duration */t[/* duration */4]
                                                ];
                                        } else {
                                          return t;
                                        }
                                      }), state[/* todos */0])]]);
                case 3 : 
                    var todoId$2 = action[0];
                    return /* Update */Block.__(0, [/* record */[/* todos */List.map((function (t) {
                                        if (Caml_obj.caml_equal(t[/* todoId */0], todoId$2)) {
                                          return /* record */[
                                                  /* todoId */t[/* todoId */0],
                                                  /* description */t[/* description */1],
                                                  /* status : Unfinished */2,
                                                  /* cycles */t[/* cycles */3],
                                                  /* duration */t[/* duration */4]
                                                ];
                                        } else {
                                          return t;
                                        }
                                      }), state[/* todos */0])]]);
                case 4 : 
                    var todoId$3 = action[0];
                    return /* Update */Block.__(0, [/* record */[/* todos */List.map((function (t) {
                                        if (Caml_obj.caml_equal(t[/* todoId */0], todoId$3)) {
                                          return tickTodo(t);
                                        } else {
                                          return t;
                                        }
                                      }), state[/* todos */0])]]);
                
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var $$default = ReasonReact.wrapReasonForJs(component, (function () {
        return make(/* array */[]);
      }));

exports.incSecond = incSecond;
exports.tickTodo = tickTodo;
exports.component = component;
exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* component Not a pure module */
