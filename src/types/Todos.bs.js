// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");

function incSecond(sec) {
  return /* Second */[sec[0] + 1 | 0];
}

function tickTodo(todo) {
  return /* record */[
          /* todoId */todo[/* todoId */0],
          /* description */todo[/* description */1],
          /* status */todo[/* status */2],
          /* cycles */todo[/* cycles */3],
          /* duration */incSecond(todo[/* duration */4])
        ];
}

function removeTodoById(todos, todoId) {
  return List.filter((function (t) {
                  return Caml_obj.caml_notequal(t[/* todoId */0], todoId);
                }))(todos);
}

function startTodoById(todos, todoId) {
  return List.map((function (t) {
                if (Caml_obj.caml_equal(t[/* todoId */0], todoId)) {
                  var match = t[/* status */2];
                  if (match !== 1) {
                    return t;
                  } else {
                    return /* record */[
                            /* todoId */t[/* todoId */0],
                            /* description */t[/* description */1],
                            /* status : Running */2,
                            /* cycles */t[/* cycles */3],
                            /* duration */t[/* duration */4]
                          ];
                  }
                } else {
                  return t;
                }
              }), todos);
}

function stopTodoById(todos, todoId) {
  return List.map((function (t) {
                if (Caml_obj.caml_equal(t[/* todoId */0], todoId)) {
                  var match = t[/* status */2];
                  if (match >= 2) {
                    return /* record */[
                            /* todoId */t[/* todoId */0],
                            /* description */t[/* description */1],
                            /* status : Stopped */1,
                            /* cycles */t[/* cycles */3],
                            /* duration */t[/* duration */4]
                          ];
                  } else {
                    return t;
                  }
                } else {
                  return t;
                }
              }), todos);
}

function tickTodoById(todos, todoId) {
  return List.map((function (t) {
                if (Caml_obj.caml_equal(t[/* todoId */0], todoId)) {
                  var match = t[/* status */2];
                  if (match >= 2) {
                    return tickTodo(t);
                  } else {
                    return t;
                  }
                } else {
                  return t;
                }
              }), todos);
}

exports.incSecond = incSecond;
exports.tickTodo = tickTodo;
exports.removeTodoById = removeTodoById;
exports.startTodoById = startTodoById;
exports.stopTodoById = stopTodoById;
exports.tickTodoById = tickTodoById;
/* No side effect */
